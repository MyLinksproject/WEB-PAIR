name: Deploy Static Site and PM2 App

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Job 1: Build and deploy the static site to GitHub Pages
  deploy_static:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Setup Node.js for static site build
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16' # Adjust to your static site's needs

      # Step 3: Install dependencies for static site
      - name: Install dependencies
        run: npm ci

      # Step 4: Build the static site
      - name: Build site
        run: npm run build # Replace with the build script for your static site

      # Step 5: Upload static site artifact for GitHub Pages
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist # Replace with your static site's output folder

      # Step 6: Deploy the static site to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Job 2: Deploy PM2 app
  deploy_pm2_app:
    runs-on: ubuntu-latest
    needs: deploy_static # Ensures the static site deployment completes first

    steps:
      # Step 1: Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16' # Adjust to your PM2 app's needs

      # Step 3: Install dependencies for PM2 app
      - name: Install dependencies
        run: npm ci

      # Step 4: Start the PM2 app
      - name: Start application with PM2
        run: npm start

      # Step 5: Verify PM2 app status
      - name: List PM2 processes
        run: pm2 list
